<?php

namespace User\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;

/**
 * UserRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    /**
     * @param string $username
     *
     * @return string|null
     */
    public function getPasswordHashByUsername(string $username): ?string
    {
        $queryBuilder = $this->createQueryBuilder('User')
            ->select('User.password')
            ->where('User.username = :username')
            ->setParameter('username', $username);

        $query = $queryBuilder->getQuery();

        try {
            return $query->getSingleScalarResult();
        } catch (NonUniqueResultException $e) {
        }

        return null;
    }

    /**
     * @param string $username
     *
     * @return User|null
     */
    public function getUserByUsername(string $username): ?User
    {
        $queryBuilder = $this->createQueryBuilder('User')
            ->where('User.username = :username')
            ->setParameter('username', $username);

        $query = $queryBuilder->getQuery();

        try {
            return $query->getSingleResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }

        return null;
    }

    /**
     * @param string $selector
     *
     * @return User|null
     */
    public function getUserBySelector(string $selector): ?User
    {
        $queryBuilder = $this->createQueryBuilder('User')
            ->where('User.selector = :selector')
            ->setParameter('selector', $selector);

        $query = $queryBuilder->getQuery();

        try {
            return $query->getSingleResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }


        return null;
    }
}
