<?php

namespace Tag\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * TagRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class TagRepository extends EntityRepository
{
    /**
     * @param string   $name
     *
     * @param null|int $id
     *
     * @return bool
     */
    public function nameExist($name, $id = null)
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('Tag.name')
            ->from(Tag::class, 'Tag')
            ->where('Tag.name = :name')
            ->setParameter('name', $name);

        if ($id) {
            $queryBuilder->andWhere('Tag.id != :id')
                ->setParameter('id', $id);
        }

        $result = $queryBuilder->getQuery()->getResult();

        if (empty($result)) {
            return true;
        }

        return false;
    }

    /**
     * @return array
     */
    public function getArray()
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('Tag.id', 'Tag.name')
            ->from(Tag::class, 'Tag');
        $tags = $queryBuilder->getQuery()->getScalarResult();

        $array = [];

        /** @var Tag $tag */
        foreach ($tags as $tag) {
            $array[$tag['id']] = $tag['name'];
        }

        return $array;
    }

    /**
     * Tag IDs
     * @return array
     */
    public function getIds()
    {
        return array_keys($this->getArray());
    }
}
